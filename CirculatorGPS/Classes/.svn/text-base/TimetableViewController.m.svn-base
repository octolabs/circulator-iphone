//
//  TimetableViewController.m
//  CirculatorGPS
//
//  Created by Marc Irlandez on 5/27/09.
//  Copyright 2009 __MyCompanyName__. All rights reserved.
//

#import <UIKit/UIKit.h>
#import "TimetableViewController.h"
#import "CirculatorGPSAppDelegate.h"


@implementation TimetableViewController


- (void)viewDidLoad {
	NSLog(@"TimetableViewController:viewDidLoad START");
	//locationController = [[CoreLocationController alloc] init];
	//locationController.delegate = self;
	//[locationController.locationManager startUpdatingLocation];

	// Uncomment the following line to display an Edit button in the navigation bar for this view controller.
    // self.navigationItem.rightBarButtonItem = self.editButtonItem;
		
	NSLog(@"TimetableViewController:viewDidLoad END");
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning]; 
}

- (void)dealloc {
	//[locationController release];
    [super dealloc];
}

- (void)locationUpdate:(CLLocation *)location {
	NSLog(@"ClosestStopViewController:locationUpdate START: %@", location);
	appDelegate.currentLocation = location;
	//locationLabel.text = [location description];
	NSLog(@"ClosestStopViewController:locationUpdate END: %@", location);
}

- (void)locationError:(NSError *)error {
	//locationLabel.text = [error description];
}


/*
- (id)initWithStyle:(UITableViewStyle)style {
    // Override initWithStyle: if you create the controller programmatically and want to perform customization that is not appropriate for viewDidLoad.
    if (self = [super initWithStyle:style]) {
    }
    return self;
}
*/

/*
- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
}
*/

- (void)viewDidAppear:(BOOL)animated {
	[[appDelegate activityIndicator] stopAnimating];
    [super viewDidAppear:animated];
}

/*
- (void)viewWillDisappear:(BOOL)animated {
	[super viewWillDisappear:animated];
}
*/
/*
- (void)viewDidDisappear:(BOOL)animated {
	[super viewDidDisappear:animated];
}
*/

/*
// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}
*/

#pragma mark Table view methods

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}


// Customize the number of rows in the table view.
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
	NSLog(@"TimetableViewController:numberOfRowsInSection START");	
	switch (section) {
		case 0:
			return [[appDelegate currentBuses] count];
		case 1:
			return [[appDelegate currentTimetables] count];
		default:
			return 0;
	}
}



- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"Cell";
	
	UITableViewCell *cell = [tableView
							 dequeueReusableCellWithIdentifier:CellIdentifier];
	cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero
								   reuseIdentifier:CellIdentifier] autorelease];
	cell.selectionStyle = UITableViewCellSelectionStyleNone;

	UILabel *statusLabel = [[[UILabel alloc] initWithFrame:CGRectMake(10, 8, 290, 30)] autorelease];
	statusLabel.font = [UIFont systemFontOfSize:15];
	statusLabel.textColor = [UIColor blackColor];
	statusLabel.lineBreakMode = UILineBreakModeWordWrap;
	statusLabel.numberOfLines = 0;
	statusLabel.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
	cell.textColor = [UIColor clearColor];

	switch ([indexPath indexAtPosition:0]) {
		case 0:
			statusLabel.text = [[[appDelegate currentBuses] objectAtIndex:[indexPath indexAtPosition:1]] stringByReplacingOccurrencesOfString:@"&amp;" withString:@"&"];
			[statusLabel setNumberOfLines:0];
			cell.text = [[[appDelegate currentBuses] objectAtIndex:[indexPath indexAtPosition:1]] stringByReplacingOccurrencesOfString:@"&amp;" withString:@"&"];
			NSLog(cell.text);
			break;
		case 1:
			statusLabel.text = [[appDelegate currentTimetables] objectAtIndex:[indexPath indexAtPosition:1]];
			[statusLabel setNumberOfLines:0];
			cell.text = [[appDelegate currentTimetables] objectAtIndex:[indexPath indexAtPosition:1]];
			break;
		default:
			break;
	}
	
	[cell.contentView addSubview:statusLabel];
	
	return cell;
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
	NSString *text;
	switch ([indexPath indexAtPosition:0]) {
		case 0:
			text = [[[appDelegate currentBuses] objectAtIndex:[indexPath indexAtPosition:1]] stringByReplacingOccurrencesOfString:@"&amp;" withString:@"&"];
			break;
		case 1:
			text = [[appDelegate currentTimetables] objectAtIndex:[indexPath indexAtPosition:1]];
			break;
		default:
			break;
	}
	
	UIFont *font = [UIFont systemFontOfSize:15];
	CGSize withinSize = CGSizeMake(tableView.bounds.size.width, 1000.0);
	CGSize size = [text sizeWithFont:font constrainedToSize:withinSize lineBreakMode:UILineBreakModeWordWrap];
	return size.height + 30;
}


/*
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
	
	switch ([indexPath indexAtPosition:0]) {
		case 0:
			NSString *text = [[appDelegate currentBuses] objectAtIndex:[indexPath indexAtPosition:1]];
			break;
		case 1:
			NSString *text = [[appDelegate currentTimetables] objectAtIndex:[indexPath indexAtPosition:1]];
			break;
		default:
			break;
	}
	
	UIFont *font = [UIFont systemFontOfSize:15];
	CGSize withinSize = CGSizeMake(tableView.bounds.size.width, 1000.0);
	CGSize size = [text sizeWithFont:font constrainedToSize:withinSize lineBreakMode:UILineBreakModeWordWrap];
	return size.height + 20.0;
}
*/

-(NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
	switch (section) {
		case 0:
			return [[appDelegate currentStop] valueForKey:@"name"];
		case 1:
			return @"Timetable";
		default:
			return nil;
	}
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    // Navigation logic may go here. Create and push another view controller.
	// AnotherViewController *anotherViewController = [[AnotherViewController alloc] initWithNibName:@"AnotherView" bundle:nil];
	// [self.navigationController pushViewController:anotherViewController];
	// [anotherViewController release];
}


/*
// Override to support conditional editing of the table view.
- (BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the specified item to be editable.
    return YES;
}
*/


/*
// Override to support editing the table view.
- (void)tableView:(UITableView *)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        // Delete the row from the data source
        [tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:YES];
    }   
    else if (editingStyle == UITableViewCellEditingStyleInsert) {
        // Create a new instance of the appropriate class, insert it into the array, and add a new row to the table view
    }   
}
*/


/*
// Override to support rearranging the table view.
- (void)tableView:(UITableView *)tableView moveRowAtIndexPath:(NSIndexPath *)fromIndexPath toIndexPath:(NSIndexPath *)toIndexPath {
}
*/


/*
// Override to support conditional rearranging of the table view.
- (BOOL)tableView:(UITableView *)tableView canMoveRowAtIndexPath:(NSIndexPath *)indexPath {
    // Return NO if you do not want the item to be re-orderable.
    return YES;
}
*/


@end

